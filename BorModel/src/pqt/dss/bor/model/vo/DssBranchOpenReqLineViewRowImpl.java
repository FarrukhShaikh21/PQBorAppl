package pqt.dss.bor.model.vo;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;

import pqt.dss.bor.model.eo.DssBranchOpenReqLineImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 10 13:43:24 PKT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DssBranchOpenReqLineViewRowImpl extends ViewRowImpl {
    public static final int ENTITY_DSSBRANCHOPENREQLINE = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BrOpenReqLineIdPk,
        BrOpenReqHeaderFk,
        Years,
        UserIdFk,
        EnterDate,
        LastUpdatedBy,
        LastUpdatedDate,
        Rh,
        Zh,
        Sgh,
        Gh,
        Buh,
        Uh,
        Consultantans,
        Total;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int BROPENREQLINEIDPK = AttributesEnum.BrOpenReqLineIdPk.index();
    public static final int BROPENREQHEADERFK = AttributesEnum.BrOpenReqHeaderFk.index();
    public static final int YEARS = AttributesEnum.Years.index();
    public static final int USERIDFK = AttributesEnum.UserIdFk.index();
    public static final int ENTERDATE = AttributesEnum.EnterDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int RH = AttributesEnum.Rh.index();
    public static final int ZH = AttributesEnum.Zh.index();
    public static final int SGH = AttributesEnum.Sgh.index();
    public static final int GH = AttributesEnum.Gh.index();
    public static final int BUH = AttributesEnum.Buh.index();
    public static final int UH = AttributesEnum.Uh.index();
    public static final int CONSULTANTANS = AttributesEnum.Consultantans.index();
    public static final int TOTAL = AttributesEnum.Total.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DssBranchOpenReqLineViewRowImpl() {
    }

    /**
     * Gets DssBranchOpenReqLine entity object.
     * @return the DssBranchOpenReqLine
     */
    public DssBranchOpenReqLineImpl getDssBranchOpenReqLine() {
        return (DssBranchOpenReqLineImpl) getEntity(ENTITY_DSSBRANCHOPENREQLINE);
    }

    /**
     * Gets the attribute value for BR_OPEN_REQ_LINE_ID_PK using the alias name BrOpenReqLineIdPk.
     * @return the BR_OPEN_REQ_LINE_ID_PK
     */
    public Number getBrOpenReqLineIdPk() {
        return (Number) getAttributeInternal(BROPENREQLINEIDPK);
    }

    /**
     * Sets <code>value</code> as attribute value for BR_OPEN_REQ_LINE_ID_PK using the alias name BrOpenReqLineIdPk.
     * @param value value to set the BR_OPEN_REQ_LINE_ID_PK
     */
    public void setBrOpenReqLineIdPk(Number value) {
        setAttributeInternal(BROPENREQLINEIDPK, value);
    }

    /**
     * Gets the attribute value for BR_OPEN_REQ_HEADER_FK using the alias name BrOpenReqHeaderFk.
     * @return the BR_OPEN_REQ_HEADER_FK
     */
    public Number getBrOpenReqHeaderFk() {
        return (Number) getAttributeInternal(BROPENREQHEADERFK);
    }

    /**
     * Sets <code>value</code> as attribute value for BR_OPEN_REQ_HEADER_FK using the alias name BrOpenReqHeaderFk.
     * @param value value to set the BR_OPEN_REQ_HEADER_FK
     */
    public void setBrOpenReqHeaderFk(Number value) {
        setAttributeInternal(BROPENREQHEADERFK, value);
    }

    /**
     * Gets the attribute value for YEARS using the alias name Years.
     * @return the YEARS
     */
    public Number getYears() {
        return (Number) getAttributeInternal(YEARS);
    }

    /**
     * Sets <code>value</code> as attribute value for YEARS using the alias name Years.
     * @param value value to set the YEARS
     */
    public void setYears(Number value) {
        setAttributeInternal(YEARS, value);
    }

    /**
     * Gets the attribute value for USER_ID_FK using the alias name UserIdFk.
     * @return the USER_ID_FK
     */
    public Number getUserIdFk() {
        return (Number) getAttributeInternal(USERIDFK);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_ID_FK using the alias name UserIdFk.
     * @param value value to set the USER_ID_FK
     */
    public void setUserIdFk(Number value) {
        setAttributeInternal(USERIDFK, value);
    }

    /**
     * Gets the attribute value for ENTER_DATE using the alias name EnterDate.
     * @return the ENTER_DATE
     */
    public Date getEnterDate() {
        return (Date) getAttributeInternal(ENTERDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ENTER_DATE using the alias name EnterDate.
     * @param value value to set the ENTER_DATE
     */
    public void setEnterDate(Date value) {
        setAttributeInternal(ENTERDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @return the LAST_UPDATED_DATE
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for RH using the alias name Rh.
     * @return the RH
     */
    public Number getRh() {
        return (Number) getAttributeInternal(RH);
    }

    /**
     * Sets <code>value</code> as attribute value for RH using the alias name Rh.
     * @param value value to set the RH
     */
    public void setRh(Number value) {
        Number oldRh = getRh() == null ? new Number(0) : getRh();
        Number newRh = value == null ? new Number(0) : value;
        Number oldToltal = getTotal() == null ? new Number(0) : getTotal();
        Number newTotal = oldToltal.subtract(oldRh).add(newRh);
        setTotal(newTotal);
        setAttributeInternal(RH, value);
    }

    /**
     * Gets the attribute value for ZH using the alias name Zh.
     * @return the ZH
     */
    public Number getZh() {
        return (Number) getAttributeInternal(ZH);
    }

    /**
     * Sets <code>value</code> as attribute value for ZH using the alias name Zh.
     * @param value value to set the ZH
     */
    public void setZh(Number value) {
        Number oldZh = getZh() == null ? new Number(0) : getZh();
        Number newZh = value == null ? new Number(0) : value;
        Number oldToltal = getTotal() == null ? new Number(0) : getTotal();
        Number newTotal = oldToltal.subtract(oldZh).add(newZh);
        setTotal(newTotal);
        setAttributeInternal(ZH, value);
    }

    /**
     * Gets the attribute value for SGH using the alias name Sgh.
     * @return the SGH
     */
    public Number getSgh() {
        return (Number) getAttributeInternal(SGH);
    }

    /**
     * Sets <code>value</code> as attribute value for SGH using the alias name Sgh.
     * @param value value to set the SGH
     */
    public void setSgh(Number value) {
        Number oldSgh = getSgh() == null ? new Number(0) : getSgh();
        Number newSgh = value == null ? new Number(0) : value;
        Number oldToltal = getTotal() == null ? new Number(0) : getTotal();
        Number newTotal = oldToltal.subtract(oldSgh).add(newSgh);
        setTotal(newTotal);
        setAttributeInternal(SGH, value);
    }

    /**
     * Gets the attribute value for GH using the alias name Gh.
     * @return the GH
     */
    public Number getGh() {
        return (Number) getAttributeInternal(GH);
    }

    /**
     * Sets <code>value</code> as attribute value for GH using the alias name Gh.
     * @param value value to set the GH
     */
    public void setGh(Number value) {
        Number oldGh = getGh() == null ? new Number(0) : getGh();
        Number newGh = value == null ? new Number(0) : value;
        Number oldToltal = getTotal() == null ? new Number(0) : getTotal();
        Number newTotal = oldToltal.subtract(oldGh).add(newGh);
        setTotal(newTotal);
        setAttributeInternal(GH, value);
    }

    /**
     * Gets the attribute value for BUH using the alias name Buh.
     * @return the BUH
     */
    public Number getBuh() {
        return (Number) getAttributeInternal(BUH);
    }

    /**
     * Sets <code>value</code> as attribute value for BUH using the alias name Buh.
     * @param value value to set the BUH
     */
    public void setBuh(Number value) {
        Number oldBuh = getBuh() == null ? new Number(0) : getBuh();
        Number newBuh = value == null ? new Number(0) : value;
        Number oldToltal = getTotal() == null ? new Number(0) : getTotal();
        Number newTotal = oldToltal.subtract(oldBuh).add(newBuh);
        setTotal(newTotal);
        setAttributeInternal(BUH, value);
    }

    /**
     * Gets the attribute value for UH using the alias name Uh.
     * @return the UH
     */
    public Number getUh() {
        return (Number) getAttributeInternal(UH);
    }

    /**
     * Sets <code>value</code> as attribute value for UH using the alias name Uh.
     * @param value value to set the UH
     */
    public void setUh(Number value) {
        
        Number oldUh = getUh() == null ? new Number(0) : getUh();
        Number newUh = value == null ? new Number(0) : value;
        Number oldToltal = getTotal() == null ? new Number(0) : getTotal();
        Number newTotal = oldToltal.subtract(oldUh).add(newUh);
        setTotal(newTotal);
        setAttributeInternal(UH, value);
    }

    /**
     * Gets the attribute value for CONSULTANTANS using the alias name Consultantans.
     * @return the CONSULTANTANS
     */
    public Number getConsultantans() {
        return (Number) getAttributeInternal(CONSULTANTANS);
    }

    /**
     * Sets <code>value</code> as attribute value for CONSULTANTANS using the alias name Consultantans.
     * @param value value to set the CONSULTANTANS
     */
    public void setConsultantans(Number value) {
        Number oldConsultants = getConsultantans() == null ? new Number(0) : getConsultantans();
        Number newConsultants = value == null ? new Number(0) : value;
        Number oldToltal = getTotal() == null ? new Number(0) : getTotal();
        Number newTotal = oldToltal.subtract(oldConsultants).add(newConsultants);
        setTotal(newTotal);
        setAttributeInternal(CONSULTANTANS, value);
    }

    /**
     * Gets the attribute value for TOTAL using the alias name Total.
     * @return the TOTAL
     */
    public Number getTotal() {
        return (Number) getAttributeInternal(TOTAL);
    }

    /**
     * Sets <code>value</code> as attribute value for TOTAL using the alias name Total.
     * @param value value to set the TOTAL
     */
    public void setTotal(Number value) {
        setAttributeInternal(TOTAL, value);
    }
}

