package pqt.dss.bor.model.eo;

import java.math.BigDecimal;

import java.sql.SQLException;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import javax.servlet.http.HttpSession;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 26 18:33:58 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DssBrOpnReqDtlResultImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BrOpenReqDtlResultIdPk,
        BrOpenReqHeaderFk,
        RowType,
        Production,
        Consultants,
        ActiveConsultants,
        Producers,
        UserIdFk,
        EnterDate,
        LastUpdatedBy,
        LastUpdatedDate,
        DssBranchOpenReqHeader;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BROPENREQDTLRESULTIDPK = AttributesEnum.BrOpenReqDtlResultIdPk.index();
    public static final int BROPENREQHEADERFK = AttributesEnum.BrOpenReqHeaderFk.index();
    public static final int ROWTYPE = AttributesEnum.RowType.index();
    public static final int PRODUCTION = AttributesEnum.Production.index();
    public static final int CONSULTANTS = AttributesEnum.Consultants.index();
    public static final int ACTIVECONSULTANTS = AttributesEnum.ActiveConsultants.index();
    public static final int PRODUCERS = AttributesEnum.Producers.index();
    public static final int USERIDFK = AttributesEnum.UserIdFk.index();
    public static final int ENTERDATE = AttributesEnum.EnterDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int DSSBRANCHOPENREQHEADER = AttributesEnum.DssBranchOpenReqHeader.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DssBrOpnReqDtlResultImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pqt.dss.bor.model.eo.DssBrOpnReqDtlResult");
    }


    /**
     * Gets the attribute value for BrOpenReqDtlResultIdPk, using the alias name BrOpenReqDtlResultIdPk.
     * @return the value of BrOpenReqDtlResultIdPk
     */
    public Number getBrOpenReqDtlResultIdPk() {
        return (Number) getAttributeInternal(BROPENREQDTLRESULTIDPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for BrOpenReqDtlResultIdPk.
     * @param value value to set the BrOpenReqDtlResultIdPk
     */
    public void setBrOpenReqDtlResultIdPk(Number value) {
        setAttributeInternal(BROPENREQDTLRESULTIDPK, value);
    }

    /**
     * Gets the attribute value for BrOpenReqHeaderFk, using the alias name BrOpenReqHeaderFk.
     * @return the value of BrOpenReqHeaderFk
     */
    public Number getBrOpenReqHeaderFk() {
        return (Number) getAttributeInternal(BROPENREQHEADERFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for BrOpenReqHeaderFk.
     * @param value value to set the BrOpenReqHeaderFk
     */
    public void setBrOpenReqHeaderFk(Number value) {
        setAttributeInternal(BROPENREQHEADERFK, value);
    }

    /**
     * Gets the attribute value for RowType, using the alias name RowType.
     * @return the value of RowType
     */
    public String getRowType() {
        return (String) getAttributeInternal(ROWTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RowType.
     * @param value value to set the RowType
     */
    public void setRowType(String value) {
        setAttributeInternal(ROWTYPE, value);
    }

    /**
     * Gets the attribute value for Production, using the alias name Production.
     * @return the value of Production
     */
    public Number getProduction() {
        return (Number) getAttributeInternal(PRODUCTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Production.
     * @param value value to set the Production
     */
    public void setProduction(Number value) {
        setAttributeInternal(PRODUCTION, value);
    }

    /**
     * Gets the attribute value for Consultants, using the alias name Consultants.
     * @return the value of Consultants
     */
    public Number getConsultants() {
        return (Number) getAttributeInternal(CONSULTANTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Consultants.
     * @param value value to set the Consultants
     */
    public void setConsultants(Number value) {
        setAttributeInternal(CONSULTANTS, value);
    }

    /**
     * Gets the attribute value for ActiveConsultants, using the alias name ActiveConsultants.
     * @return the value of ActiveConsultants
     */
    public Number getActiveConsultants() {
        return (Number) getAttributeInternal(ACTIVECONSULTANTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveConsultants.
     * @param value value to set the ActiveConsultants
     */
    public void setActiveConsultants(Number value) {
        setAttributeInternal(ACTIVECONSULTANTS, value);
    }

    /**
     * Gets the attribute value for Producers, using the alias name Producers.
     * @return the value of Producers
     */
    public Number getProducers() {
        return (Number) getAttributeInternal(PRODUCERS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Producers.
     * @param value value to set the Producers
     */
    public void setProducers(Number value) {
        setAttributeInternal(PRODUCERS, value);
    }

    /**
     * Gets the attribute value for UserIdFk, using the alias name UserIdFk.
     * @return the value of UserIdFk
     */
    public Number getUserIdFk() {
        return (Number) getAttributeInternal(USERIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserIdFk.
     * @param value value to set the UserIdFk
     */
    public void setUserIdFk(Number value) {
        setAttributeInternal(USERIDFK, value);
    }

    /**
     * Gets the attribute value for EnterDate, using the alias name EnterDate.
     * @return the value of EnterDate
     */
    public Date getEnterDate() {
        return (Date) getAttributeInternal(ENTERDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnterDate.
     * @param value value to set the EnterDate
     */
    public void setEnterDate(Date value) {
        setAttributeInternal(ENTERDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * @return the associated entity DssBranchOpenReqHeaderImpl.
     */
    public DssBranchOpenReqHeaderImpl getDssBranchOpenReqHeader() {
        return (DssBranchOpenReqHeaderImpl) getAttributeInternal(DSSBRANCHOPENREQHEADER);
    }

    /**
     * Sets <code>value</code> as the associated entity DssBranchOpenReqHeaderImpl.
     */
    public void setDssBranchOpenReqHeader(DssBranchOpenReqHeaderImpl value) {
        setAttributeInternal(DSSBRANCHOPENREQHEADER, value);
    }


    /**
     * @param brOpenReqDtlResultIdPk key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number brOpenReqDtlResultIdPk) {
        return new Key(new Object[] { brOpenReqDtlResultIdPk });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected void create(AttributeList attributeList) {
         super.create(attributeList);
         Date currentDate = new Date();
         setEnterDate((Date) currentDate.getCurrentDate());
         setLastUpdatedDate((Date) currentDate.getCurrentDate());
         SequenceImpl seq = new SequenceImpl("dss_br_opn_req_dtl_rlt_seq", getDBTransaction());
         setBrOpenReqDtlResultIdPk(seq.getSequenceNumber());
         
    //         setBranchStatus("INCOMPLETE");
    //         setDssStatus("INCOMPLETE");
         
         FacesContext fctx = FacesContext.getCurrentInstance();
         ExternalContext ectx = fctx.getExternalContext();
         HttpSession userSession = (HttpSession) ectx.getSession(false);
         try {
             setUserIdFk(new Number(userSession.getAttribute("pUserId")));
             setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
         } catch (SQLException ex) {
             setUserIdFk(new Number(0));
             setLastUpdatedBy(new Number(0));
         }
     }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Date currentDate = new Date();
        if (operation == DML_UPDATE) {
            setLastUpdatedDate((Date) currentDate.getCurrentDate());
            FacesContext fctx = FacesContext.getCurrentInstance();
            ExternalContext ectx = fctx.getExternalContext();
            HttpSession userSession = (HttpSession) ectx.getSession(false);
            try {
                setUserIdFk(new Number(userSession.getAttribute("pUserId")));
                setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
            } catch (SQLException ex) {
                setUserIdFk(new Number(0));
                setLastUpdatedBy(new Number(0));
            }
        }
        super.doDML(operation, e);
    }
}

